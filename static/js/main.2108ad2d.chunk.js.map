{"version":3,"sources":["../../textutil/src/logo.svg","../../textutil/src/Component/Navbar.js","../../textutil/src/Component/TextForm.js","../../textutil/src/Component/Alert.js","../../textutil/src/App.js","../../textutil/src/reportWebVitals.js","../../textutil/src/index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","words","document","getElementById","split","i","length","substr","capitalText","join","select","execCommand","window","getSelection","removeAllRanges","showAlert","querySelector","navigator","clipboard","readText","then","newtxt","Alert","alert","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2108ad2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    {/* a tag is changed to Link tag */}\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                                {/* a tag is changed to Link tab */}\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">About</a> */}\r\n                                {/* Changing above line to <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n                            </li>\r\n                        </ul>\r\n                        <div className={`form-check form-switch mx-5 text-${props.mode==='light'?'dark':'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"><strong>Enable Dark Mode</strong></label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n// PropTypes\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\n// Default Props\r\nNavbar.defaultProps = {\r\n    title: 'Set Title Here'\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    // On Change \r\n    // event.target gives you the element that triggered the event. So, event.target.value gives the value of that element\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    // To Uppercase\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    // To Lowercase\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    // To Capital Case\r\n    const capitalCase = () => {\r\n        let input = document.getElementById(\"exampleFormControlTextarea1\").value;\r\n        let words = input.split(\" \");\r\n\r\n        for(let i=0; i<words.length; i++) {\r\n            words[i] = words[i][0].toUpperCase() + words[i].substr(1);\r\n        }\r\n        let capitalText = words.join(\" \");\r\n        setText(capitalText);\r\n    } \r\n    // To Clear Text\r\n    const handleClearText = () => {\r\n        let newText = \" \";\r\n        setText(newText);\r\n    }\r\n\r\n    // Copy to Clickboard\r\n    const copyToClickboard = () => {\r\n        let input = document.getElementById(\"exampleFormControlTextarea1\");\r\n        input.select();\r\n        document.execCommand(\"copy\");\r\n        window.getSelection().removeAllRanges();\r\n        {props.showAlert(\"Copied to Clickboard\",\"success\")}\r\n\r\n        // Below code can also be used\r\n        /* var txt = document.getElementById(\"exampleFormControlTextarea1\").value;\r\n        navigator.clipboard.writeText(txt);  */\r\n    }\r\n\r\n    // To Undo\r\n    const undo = () => {\r\n        let input1 = document.getElementById(\"exampleFormControlTextarea1\");\r\n        input1.select();\r\n        document.execCommand(\"undo\");\r\n        window.getSelection().removeAllRanges();\r\n    }\r\n    // Select All\r\n    const selectAll = () => {\r\n        let input = document.querySelector(\"#exampleFormControlTextarea1\");\r\n        input.select();\r\n        document.execCommand(\"selectAll\");\r\n    }\r\n    // Cut\r\n    const cut = () => {\r\n        let input = document.querySelector(\"#exampleFormControlTextarea1\");\r\n        input.select();\r\n        document.execCommand(\"cut\");\r\n    }\r\n    // Paste\r\n    const paste = () => {\r\n        let text = navigator.clipboard.readText();\r\n        text.then(newtxt => { document.getElementById(\"exampleFormControlTextarea1\").value = newtxt; });\r\n    }\r\n    \r\n    // useState\r\n\r\n    const [text, setText] = useState();\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <div className=\"mb-3 my-5\">\r\n                    <h2 className=\"d-inline\">{props.heading}</h2>\r\n                    <textarea className=\"form-control my-4\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#37132a':'white', color: props.mode === 'dark'?'white':'black'}} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-success mx-2\" onClick={handleUpClick}>Uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Lowercase</button>\r\n                <button className=\"btn btn-success mx-2\" onClick={capitalCase}>Capitalcase</button>\r\n                <button className=\"btn btn-danger mx-2\" onClick={handleClearText}>Clear Text</button>\r\n                <button className=\"btn btn-info mx-2\" onClick={copyToClickboard}>Copy To Clickboard</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={undo}>Undo</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={selectAll}>Select All</button>\r\n                <button className=\"btn btn-warning mx-2\" onClick={cut}>Cut</button>\r\n                <button className=\"btn btn-success mx-2\" onClick={paste}>Paste</button>\r\n            </div>\r\n            {/* <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}> */}\r\n                {/* <h4>Your Text Summary: </h4> */}\r\n                {/* <p>{text.length} characters and {text.split(\" \").length} words</p> */}\r\n                {/* <p>{(text.split(\" \").length) * 0.008} minutes read</p> */}\r\n            {/* </div> */}\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n    )\r\n}\r\n ","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Component/Navbar';\nimport TextForm from './Component/TextForm';\nimport About from './Component/About';\nimport React, { useState } from 'react'\nimport Alert from './Component/Alert'; \n\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#1f1e41'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = 'TextFlow - Dark Mode'\n\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now'\n      // }, 1000);\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = 'TextFlow - Light Mode'\n    }\n  }\n  return (\n    <>\n      {/* <BrowserRouter> */}\n         <Navbar title=\"TextFlow\" mode={mode} toggleMode={toggleMode} />\n         <Alert alert={alert} />\n         <div className=\"container my-3\">\n         {/* <Routes> */}\n         {/* <Route exact path=\"/\" element={<TextForm heading=\"Enter Text Below\" mode={mode}/>} /> */} \n         <TextForm heading=\"Enter Text Below\" mode={mode}/>\n         {/* exact keyword is used so that react matches exact path*/}\n         {/* <Route exact path=\"/about\" element={<About/>} /> */}\n       {/* </Routes> */}\n         </div>\n       {/* </BrowserRouter>  */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}